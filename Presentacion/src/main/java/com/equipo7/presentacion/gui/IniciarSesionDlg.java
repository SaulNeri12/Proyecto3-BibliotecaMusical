/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.equipo7.presentacion.gui;

import com.equipo7.negocio.bo.UsuariosBO;
import com.equipo7.negocio.bo.interfaces.IUsuariosBO;
import com.equipo7.negocio.dtos.UsuarioDTO;
import com.equipo7.negocio.excepciones.BOException;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Color;
import java.awt.Font;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author neri
 */
public class IniciarSesionDlg extends javax.swing.JFrame {

    private IUsuariosBO usuariosBO = UsuariosBO.getInstance();
    private UsuarioDTO usuarioLogeado;

    /**
     * indica si despues de cerrar el dialogo el usuario puede acceder a la
     * aplicacion
     */
    private boolean validado = false;

    /**
     * Creates new form IniciarSesionDlg
     */
    public IniciarSesionDlg() {
        FlatDarkLaf.setup();
        initComponents();

        this.setTitle("inicio de Sesion");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.getContentPane().setBackground(new Color(0x10, 0x10, 0x10));

        this.prepararEstilo();
        this.prepararFuentes();
    }

    /**
     * Asigna las fuentes de letra correspondientes a los distintos componentes
     * del dialogo de inicio de sesion
     */
    private void prepararFuentes() {
        this.getContentPane().setFont(new Font("Gotham Light", Font.PLAIN, 12));
        this.contrasenaLbl.setFont(new Font("Gotham Black", Font.PLAIN, 12));
        this.tituloIniciarSesionLbl.setFont(new Font("Gotham Black", Font.PLAIN, 24));
        this.iniciarSesionBtn.setFont(new Font("Gotham Black", Font.PLAIN, 12));
        //this.emailTextField.setFont(new Font("Gotham Black", Font.PLAIN, 12));
        this.correoLbl.setFont(new Font("Gotham Black", Font.PLAIN, 12));
        this.avisoCrearCuenta.setFont(new Font("Gotham Black", Font.PLAIN, 12));
    }

    /**
     * Carga los ultimos ajustes de estilo del sistema
     */
    private void prepararEstilo() {
        //UIManager.put("Button.arc", 999);
        SwingUtilities.updateComponentTreeUI(this);
    }

    /**
     * Evalua el nombre de usuario a registrar. El nombre de usuario no debe
     * tener espacios entre nombres, no debe tener mas que letras mayusculas,
     * minusculas, numeros y caracter "_" solamente. Los caracteres unicode no
     * estan permitidos. Debe de ser un nombre de entre 6 y 2- caracteres
     *
     * @param nombre Nombre de usuario a evaluar
     * @return true si el nombre cumple con los requisitos, false en caso
     * contrario
     */
    private boolean nombreUsuarioValido(String nombre) {
        String regex = "^[a-zA-Z0-9_]{6,20}$";
        return nombre != null && nombre.matches(regex);
    }

    /**
     * Evalua que la direccion de correo electronico tenga el formato correcto
     * de un correo electronico
     *
     * @param email Direccion de correo electronico a probar
     * @return true si cumple con el formato, false en caso contrario
     */
    private boolean correoValido(String email) {
        String regex = "(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])";
        return email != null && email.matches(regex);
    }

    /**
     * Evalua la contrasena ingresada. Esta no debe de contener espacios ni
     * caracteres unicode, solamente mayusculas, minusculas, numeros y simbolos
     * como "?_#&". Ademas debe tener solo de 8 a 20 caracteres de largo.
     *
     * @param contrasena Contrasena a evaluar
     * @return true si cumple con el formato correcto, false en caso contrario
     */
    private boolean contrasenaValida(String contrasena) {
        String regex = "^[a-zA-Z0-9?_*#&]{8,20}$";
        return contrasena != null && contrasena.length() >= 8 && contrasena.length() <= 20 && contrasena.matches(regex);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloIniciarSesionLbl = new javax.swing.JLabel();
        correoLbl = new javax.swing.JLabel();
        contrasenaLbl = new javax.swing.JLabel();
        correoTextField = new javax.swing.JTextField();
        contrasenaPasswordField = new javax.swing.JPasswordField();
        iniciarSesionBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        avisoCrearCuenta = new javax.swing.JLabel();
        crearCuentaBtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tituloIniciarSesionLbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        tituloIniciarSesionLbl.setForeground(new java.awt.Color(255, 255, 255));
        tituloIniciarSesionLbl.setText("Iniciar Sesión");

        correoLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        correoLbl.setForeground(new java.awt.Color(255, 255, 255));
        correoLbl.setText("Correo Electrónico");

        contrasenaLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        contrasenaLbl.setForeground(new java.awt.Color(255, 255, 255));
        contrasenaLbl.setText("Contraseña");

        iniciarSesionBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        iniciarSesionBtn.setForeground(new java.awt.Color(255, 255, 255));
        iniciarSesionBtn.setText("Iniciar Sesión");
        iniciarSesionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarSesionBtnActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(204, 204, 204));

        avisoCrearCuenta.setForeground(new java.awt.Color(255, 255, 255));
        avisoCrearCuenta.setText("¿No tienes una cuenta?");

        crearCuentaBtn.setForeground(new java.awt.Color(204, 51, 255));
        crearCuentaBtn.setText("Crear Cuenta");
        crearCuentaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crearCuentaBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iniciarSesionBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contrasenaPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(correoTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(contrasenaLbl)
                    .addComponent(correoLbl)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(avisoCrearCuenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crearCuentaBtn)))
                .addContainerGap(99, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloIniciarSesionLbl)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(tituloIniciarSesionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(correoLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(correoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(contrasenaLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contrasenaPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(iniciarSesionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avisoCrearCuenta)
                    .addComponent(crearCuentaBtn))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarSesionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarSesionBtnActionPerformed
        String correoElectronico = this.correoTextField.getText();
        String contrasenha = new String(this.contrasenaPasswordField.getPassword());

        try {
            // Validación del correo y la contraseña
            if (!this.correoValido(correoElectronico)) {
                throw new BOException("El correo electrónico dado no cumple con el formato correcto, por favor, ingrese una dirección de correo válida.");
            } else if (!this.contrasenaValida(contrasenha)) {
                throw new BOException("La contraseña no es válida. Ingrese una contraseña con el formato correcto.");
            }

            // Verificar que las credenciales sean correctas
            this.usuarioLogeado = this.usuariosBO.iniciarSesion(correoElectronico, contrasenha);

            if (this.usuarioLogeado != null) {
                // Si se obtuvo un usuario válido, actualizar el usuario en PerfilUsuario
                PerfilUsuario.setUsuario(usuarioLogeado);

                // Verifica si el usuario ya tiene restricciones de géneros y muestra la pantalla correspondiente
                if (usuarioLogeado.getGenerosRestringidos() != null && !usuarioLogeado.getGenerosRestringidos().isEmpty()) {
                    // Mostrar mensaje de bienvenida con los géneros restringidos
                    JOptionPane.showMessageDialog(this, "Bienvenido, " + usuarioLogeado.getNombreUsuario() + ". Tienes géneros musicales restringidos.",
                            "Bienvenido", JOptionPane.INFORMATION_MESSAGE);
                }

                // Abrir la pantalla de inicio
                this.abrirPantallaInicio();
            } else {
                // Si el usuario no es válido, mostrar mensaje de error
                throw new BOException("Credenciales incorrectas. Verifique su correo electrónico o contraseña.");
            }

        } catch (BOException ex) {
            JOptionPane.showMessageDialog(
                    this,
                    ex.getMessage(),
                    "Iniciar Sesión",
                    JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_iniciarSesionBtnActionPerformed

    private void crearCuentaBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crearCuentaBtnMouseClicked
        RegistrarUsuarioDlg dlg = new RegistrarUsuarioDlg();
        this.dispose();
        dlg.setVisible(true);
    }//GEN-LAST:event_crearCuentaBtnMouseClicked

    private void abrirPantallaInicio() {
        FrmPantallaPrincipal frm = new FrmPantallaPrincipal();
        this.dispose();
        frm.setVisible(true);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avisoCrearCuenta;
    private javax.swing.JLabel contrasenaLbl;
    private javax.swing.JPasswordField contrasenaPasswordField;
    private javax.swing.JLabel correoLbl;
    private javax.swing.JTextField correoTextField;
    private javax.swing.JLabel crearCuentaBtn;
    private javax.swing.JButton iniciarSesionBtn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel tituloIniciarSesionLbl;
    // End of variables declaration//GEN-END:variables
}
